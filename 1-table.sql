-- TABLE STATUS
CREATE TABLE XXBCM_ORDER_STATUS (
    STATUS_ID NUMBER PRIMARY KEY,
    STATUS_NAME VARCHAR2(20) UNIQUE NOT NULL
);

INSERT INTO XXBCM_ORDER_STATUS (STATUS_ID, STATUS_NAME) VALUES(1, 'Open');
INSERT INTO XXBCM_ORDER_STATUS (STATUS_ID, STATUS_NAME)VALUES(2, 'Closed');
INSERT INTO XXBCM_ORDER_STATUS (STATUS_ID, STATUS_NAME) VALUES(3, 'Cancelled');
INSERT INTO XXBCM_ORDER_STATUS (STATUS_ID, STATUS_NAME) VALUES(4, 'Received');

CREATE TABLE XXBCM_INVOICE_STATUS (
    STATUS_ID NUMBER PRIMARY KEY,
    STATUS_NAME VARCHAR2(20) UNIQUE NOT NULL
);

INSERT INTO XXBCM_INVOICE_STATUS (STATUS_ID, STATUS_NAME) VALUES (1, 'Paid');
INSERT INTO XXBCM_INVOICE_STATUS (STATUS_ID, STATUS_NAME) VALUES (2, 'Pending');


-- TABLE PRINCIPAL
-- Table XXBCM_SUPPLIERS
CREATE TABLE XXBCM_SUPPLIERS (
    SUPPLIER_ID INTEGER CONSTRAINT XXBCM_SUPPLIERS_pk PRIMARY KEY, 
    SUPPLIER_NAME VARCHAR2(150) NOT NULL, 
    SUPP_CONTACT_NAME VARCHAR2(50), 
    SUPP_ADDRESS VARCHAR2(200), 
    SUPP_CONTACT_1 VARCHAR2(15),
    SUPP_CONTACT_2 VARCHAR2(15),
    SUPP_EMAIL VARCHAR2(100) CONSTRAINT unique_email UNIQUE 
);

-- Séquence pour XXBCM_SUPPLIERS
CREATE SEQUENCE XXBCM_SUPPLIERS_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

-- Trigger pour l'auto-incrémentation de SUPPLIER_ID
CREATE OR REPLACE TRIGGER XXBCM_SUPPLIERS_TRG
BEFORE INSERT ON XXBCM_SUPPLIERS
FOR EACH ROW
BEGIN
    :NEW.SUPPLIER_ID := XXBCM_SUPPLIERS_SEQ.NEXTVAL;
END;


-- Table XXBCM_ORDERS
CREATE TABLE XXBCM_ORDERS (
    ORDER_ID NUMBER CONSTRAINT XXBCM_ORDERS_pk PRIMARY KEY, 
    ORDER_REF VARCHAR2(20) NOT NULL, 
    ORDER_DESCRIPTION VARCHAR2(1000), 
    ORDER_TOTAL_AMOUNT NUMBER(10,2) NOT NULL, 
    SUPPLIER_ID NUMBER NOT NULL, 
    ORDER_DATE DATE NOT NULL,
    STATUS_ID NUMBER NOT NULL, 
    CONSTRAINT FK_SUPPLIER FOREIGN KEY (SUPPLIER_ID)
        REFERENCES XXBCM_SUPPLIERS (SUPPLIER_ID) ENABLE,
    CONSTRAINT FK_ORDER_STATUS FOREIGN KEY (STATUS_ID)
        REFERENCES XXBCM_ORDER_STATUS (STATUS_ID) ENABLE
);

-- Séquence pour XXBCM_ORDERS
CREATE SEQUENCE XXBCM_ORDERS_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

-- Trigger pour l'auto-incrémentation de ORDER_ID
CREATE OR REPLACE TRIGGER XXBCM_ORDERS_TRG
BEFORE INSERT ON XXBCM_ORDERS
FOR EACH ROW
BEGIN
    :NEW.ORDER_ID := XXBCM_ORDERS_SEQ.NEXTVAL;
END;


-- Table XXBCM_ORDER_LINE
CREATE TABLE XXBCM_ORDER_LINE (
    ORDER_LINE_ID NUMBER CONSTRAINT XXBCM_ORDER_LINE_pk PRIMARY KEY, 
    ORDER_ID NUMBER NOT NULL, 
    ORDER_DESCRIPTION VARCHAR2(1000), 
    ORDER_LINE_AMOUNT NUMBER(10,2) NOT NULL, 
    STATUS_ID NUMBER NOT NULL, 
    ORDER_LINE_REF VARCHAR2(50) NOT NULL,
    CONSTRAINT FK_ORDER FOREIGN KEY (ORDER_ID)
        REFERENCES XXBCM_ORDERS (ORDER_ID) ENABLE,
    CONSTRAINT FK_ORDER_LINE_STATUS FOREIGN KEY (STATUS_ID)
        REFERENCES XXBCM_ORDER_STATUS (STATUS_ID) ENABLE
);

-- Séquence pour XXBCM_ORDER_LINE
CREATE SEQUENCE XXBCM_ORDER_LINE_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

-- Trigger pour l'auto-incrémentation de ORDER_LINE_ID
CREATE OR REPLACE TRIGGER XXBCM_ORDER_LINE_TRG
BEFORE INSERT ON XXBCM_ORDER_LINE
FOR EACH ROW
BEGIN
    :NEW.ORDER_LINE_ID := XXBCM_ORDER_LINE_SEQ.NEXTVAL;
END;


-- Table XXBCM_INVOICES
CREATE TABLE XXBCM_INVOICES (
    INVOICE_ID NUMBER CONSTRAINT XXBCM_INVOICES_PK PRIMARY KEY, 
    INVOICE_REFERENCE VARCHAR2(30), 
    INVOICE_DATE DATE, 
    STATUS_ID NUMBER, 
    INVOICE_HOLD_REASON VARCHAR2(2000), 
    INVOICE_AMOUNT NUMBER(10,2), 
    INVOICE_DESCRIPTION VARCHAR2(1000), 
    ORDER_LINE_ID NUMBER, 
    CONSTRAINT FK_INVOICE_ORDER_LINE FOREIGN KEY (ORDER_LINE_ID)
        REFERENCES XXBCM_ORDER_LINE (ORDER_LINE_ID) ENABLE,
    CONSTRAINT FK_INVOICE_STATUS FOREIGN KEY (STATUS_ID)
        REFERENCES XXBCM_INVOICE_STATUS (STATUS_ID) ENABLE
);

-- Séquence pour XXBCM_INVOICES
CREATE SEQUENCE XXBCM_INVOICES_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

-- Trigger pour l'auto-incrémentation de INVOICE_ID
CREATE OR REPLACE TRIGGER XXBCM_INVOICES_TRG
BEFORE INSERT ON XXBCM_INVOICES
FOR EACH ROW
BEGIN
    :NEW.INVOICE_ID := XXBCM_INVOICES_SEQ.NEXTVAL;
END;


